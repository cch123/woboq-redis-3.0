<dec f='redis/src/util.h' l='37' type='long long memtoll(const char * p, int * err)'/>
<use f='redis/src/config.c' l='228' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='284' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='367' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='396' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='398' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='400' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='402' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='404' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='406' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='408' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='410' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='497' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='498' u='c' c='loadServerConfigFromString'/>
<use f='redis/src/config.c' l='632' u='c' c='configSetCommand'/>
<use f='redis/src/config.c' l='868' u='c' c='configSetCommand'/>
<use f='redis/src/config.c' l='903' u='c' c='configSetCommand'/>
<def f='redis/src/util.c' l='180' ll='230' type='long long memtoll(const char * p, int * err)'/>
<doc f='redis/src/util.c' l='173'>/* Convert a string representing an amount of memory into the number of
 * bytes, so for instance memtoll(&quot;1Gb&quot;) will return 1073741824 that is
 * (1024*1024*1024).
 *
 * On parsing error, if *err is not NULL, it&apos;s set to 1, otherwise it&apos;s
 * set to 0. On error the function return value is 0, regardless of the
 * fact &apos;err&apos; is NULL or not. */</doc>
