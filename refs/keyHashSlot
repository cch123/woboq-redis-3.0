<dec f='redis/src/redis.h' l='1347' type='unsigned int keyHashSlot(char * key, int keylen)'/>
<def f='redis/src/cluster.c' l='613' ll='632' type='unsigned int keyHashSlot(char * key, int keylen)'/>
<use f='redis/src/cluster.c' l='4052' u='c' c='clusterCommand'/>
<use f='redis/src/cluster.c' l='4819' u='c' c='getNodeByQuery'/>
<use f='redis/src/cluster.c' l='4985' u='c' c='clusterRedirectBlockedClientIfNeeded'/>
<doc f='redis/src/cluster.c' l='607'>/* We have 16384 hash slots. The hash slot of a given key is obtained
 * as the least significant 14 bits of the crc16 of the key.
 *
 * However if the key contains the {...} pattern, only the part between
 * { and } is hashed. This may be useful in the future to force certain
 * keys to be in the same node (assuming no resharding is in progress). */</doc>
<use f='redis/src/db.c' l='1132' u='c' c='slotToKeyAdd'/>
<use f='redis/src/db.c' l='1139' u='c' c='slotToKeyDel'/>
