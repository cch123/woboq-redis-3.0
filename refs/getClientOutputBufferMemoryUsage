<dec f='redis/src/redis.h' l='1055' type='unsigned long getClientOutputBufferMemoryUsage(redisClient * c)'/>
<use f='redis/src/networking.c' l='1349' u='c' c='catClientInfoString'/>
<def f='redis/src/networking.c' l='1574' ll='1578' type='unsigned long getClientOutputBufferMemoryUsage(redisClient * c)'/>
<use f='redis/src/networking.c' l='1620' u='c' c='checkClientOutputBufferLimits'/>
<doc f='redis/src/networking.c' l='1561'>/* This function returns the number of bytes that Redis is virtually
 * using to store the reply still not read by the client.
 * It is &quot;virtual&quot; since the reply output list may contain objects that
 * are shared and are not really using additional memory.
 *
 * The function returns the total sum of the length of all the objects
 * stored in the output list, plus the memory used to allocate every
 * list node. The static reply buffer is not taken into account since it
 * is allocated anyway.
 *
 * Note: this function is very fast so can be called as many time as
 * the caller wishes. The main usage of this function currently is
 * enforcing the client output length limits. */</doc>
<use f='redis/src/redis.c' l='3201' u='c' c='freeMemoryIfNeeded'/>
