<dec f='redis/src/redis.h' l='1159' type='void replicationCacheMaster(redisClient * c)'/>
<use f='redis/src/networking.c' l='701' u='c' c='freeClient'/>
<def f='redis/src/replication.c' l='1596' ll='1631' type='void replicationCacheMaster(redisClient * c)'/>
<doc f='redis/src/replication.c' l='1583'>/* This function is called by freeClient() in order to cache the master
 * client structure instead of destryoing it. freeClient() will return
 * ASAP after this function returns, so every action needed to avoid problems
 * with a client that is really &quot;suspended&quot; has to be done by this function.
 *
 * The other functions that will deal with the cached master are:
 *
 * replicationDiscardCachedMaster() that will make sure to kill the client
 * as for some reason we don&apos;t want to use it in the future.
 *
 * replicationResurrectCachedMaster() that is used after a successful PSYNC
 * handshake in order to reactivate the cached master.
 */</doc>
