<dec f='redis/src/redis.h' l='1120' type='robj * dupStringObject(robj * o)'/>
<use f='redis/src/networking.c' l='193' u='c' c='dupLastObjectIfNeeded'/>
<def f='redis/src/object.c' l='162' ll='181' type='robj * dupStringObject(robj * o)'/>
<doc f='redis/src/object.c' l='154'>/* Duplicate a string object, with the guarantee that the returned object
 * has the same encoding as the original one.
 *
 * This function also guarantees that duplicating a small integere object
 * (or a string object that contains a representation of a small integer)
 * will always result in a fresh object that is unshared (refcount == 1).
 *
 * The resulting object always has refcount set to 1. */</doc>
<use f='redis/src/t_set.c' l='499' u='c' c='srandmemberWithCountCommand'/>
<use f='redis/src/t_set.c' l='528' u='c' c='srandmemberWithCountCommand'/>
